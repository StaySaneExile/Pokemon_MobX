{"version":3,"sources":["components/pokemonCard.jsx","components/tag.jsx","components/selectedPoke.jsx","components/limitLoad.jsx","components/pagination.jsx","App.js","api/api.js","store/pokemonApp.js","store/index.js","index.js"],"names":["PokemonCard","props","className","name","toUpperCase","type","onClick","getStatsPoke","url","Tag","SelectedPoke","fullStats","arrType","arrStats","types","forEach","el","push","stats","obj","arr","stat","src","alt","map","i","role","LimitLoad","changePageSize","Pagination","totalPages","Math","ceil","totalCount","pageLimit","pages","useState","currentPage","setCurrentPage","plusCurrentPage","value","changeOffset","getPreviousPage","href","getNextPage","App","inject","observer","pokemonApp","pokemons","selectedPoke","useEffect","getPoke","getStats","newLimit","setPageLimit","pokemon","newOffset","setOffset","api","offset","limit","axios","get","then","res","data","makeAutoObservable","require","stores","nextPage","previousPage","pageOffset","setPoke","payload","setSelectedPoke","setNextPage","setPreviousPage","a","results","next","previous","count","console","log","this","deep","autoBind","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd4c1b95.chunk.js","sourcesContent":["import '../styles/pokemonCard.css'\r\n\r\nexport const PokemonCard = (props) => {\r\n\r\n    const getStats = () => {\r\n        props.getStatsPoke(props.url)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card text-white bg-dark mb-3\">\r\n            <h2 className=\"card-header\">{props.name.toUpperCase()}</h2>\r\n            <div className=\"card-body\">\r\n                <p className=\"card-text\"> Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                    Corporis itaque non totam. Error, molestias, provident?\r\n                </p>\r\n            </div>\r\n            <div className='cardFooter'>\r\n                <button type=\"button\" className=\"btn btn-primary\"\r\n                        onClick={getStats}>\r\n                    View stats\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const Tag = (props) => {\r\n\r\n    const type = props.type === 'fire'\r\n        ? 'danger'\r\n        :props.type === 'poison' ? 'success'\r\n            :props.type === 'grass' ? 'secondary'\r\n                :'warning text-dark'\r\n\r\n    return (\r\n        <span className={`badge bg-${type}`}>{props.type}</span>\r\n    )\r\n}","import '../styles/slectedPoke.css'\r\nimport {Tag} from \"./tag\";\r\n\r\nexport const SelectedPoke = ({fullStats}) => {\r\n\r\n  const arrType = []\r\n  const arrStats = []\r\n\r\n\r\n  fullStats.types.forEach(el => {\r\n    arrType.push(el['type'].name)\r\n  })\r\n\r\n  fullStats.stats.forEach( obj => {\r\n    let arr = []\r\n    arr.push(obj.stat['name'], obj['base_stat'])\r\n    arrStats.push(arr)\r\n  })\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <img\r\n        src=\"https://images.unsplash.com/photo-1542779283-429940ce8336?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\"\r\n        className=\"card-img-top\" alt=\"...\"/>\r\n      <div className=\"card-body\">\r\n        <h4 className=\"card-title\">{fullStats.name}</h4>\r\n      </div>\r\n      <ul className=\"list-group list-group\">\r\n        {\r\n          arrStats.map( (el,i) => (\r\n          <li key={`${i}_${el[0]}`} className=\"list-group-item\">\r\n            <h5>{el[0]}</h5>\r\n            <h4>{el[1]}</h4>\r\n          </li>\r\n          ))\r\n        }\r\n      </ul>\r\n      <li className=\"list-group-item\">\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\r\n          {\r\n            arrType.map(type => (<Tag key={`i_${type}`} type={type}/>))\r\n          }\r\n        </div>\r\n      </li>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const LimitLoad  = ({changePageSize}) => {\r\n\r\n  return (\r\n    <div className='paginationBlock'>\r\n      <div>\r\n        <h3>Отображать по</h3>\r\n      </div>\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination\">\r\n          <a onClick={()=>changePageSize(10)} className=\"page-link\">10</a>\r\n          <a onClick={()=>changePageSize(20)} className=\"page-link\">20</a>\r\n          <a onClick={()=>changePageSize(50)} className=\"page-link\">50</a>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react'\r\n\r\nexport const Pagination = (props) => {\r\n\r\n\r\n  const totalPages = Math.ceil(props.totalCount / props.pageLimit)\r\n  const pages = []\r\n  for (let i = 0; i < totalPages; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  const [currentPage, setCurrentPage] = useState(0)\r\n\r\n  const minusCurrentPage = (value) => {\r\n    if (currentPage >= 1)\r\n      setCurrentPage(pages[currentPage - value])\r\n    props.changeOffset(currentPage * props.pageLimit)\r\n  }\r\n\r\n  const plusCurrentPage = (value) => {\r\n    setCurrentPage(pages[currentPage + value])\r\n    props.changeOffset(currentPage * props.pageLimit)\r\n  }\r\n\r\n  const nextPage = () => {\r\n    props.getNextPage()\r\n  }\r\n  const previousPage = () => {\r\n    props.getPreviousPage()\r\n  }\r\n  return (\r\n    <div>\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination\">\r\n          <a onClick={previousPage} className=\"page-link\" href=\"#\">\r\n            Previous\r\n          </a>\r\n          {\r\n            currentPage >= 1\r\n              ? <a onClick={() => minusCurrentPage(1)} className=\"page-link\" href=\"#\">\r\n                {pages[currentPage]}\r\n              </a>\r\n              : ''\r\n          }\r\n          <li className=\"page-item active\" aria-current=\"page\">\r\n            <a className=\"page-link\" href=\"#\" aria-current={true}>\r\n              {currentPage + 1}\r\n            </a>\r\n          </li>\r\n          <a onClick={() => plusCurrentPage(1)} className=\"page-link\" href=\"#\">\r\n            {currentPage + 2}\r\n          </a>\r\n          <a onClick={() => plusCurrentPage(2)} className=\"page-link\" href=\"#\">\r\n            {currentPage + 3}\r\n          </a>\r\n          <a onClick={nextPage} className=\"page-link\" href=\"#\">\r\n            Next\r\n          </a>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n}","import React, {useEffect, useState, useMemo} from 'react'\nimport './App.css';\nimport {observer} from \"mobx-react-lite\";\nimport {inject} from \"mobx-react\";\nimport {PokemonCard} from \"./components/pokemonCard\";\nimport {SelectedPoke} from \"./components/selectedPoke\";\nimport {LimitLoad} from \"./components/limitLoad\";\nimport {Pagination} from \"./components/pagination\";\n\n\nconst App = inject('pokemonApp')(\n  observer(({pokemonApp}) => {\n\n      const  {\n        pokemons,\n        selectedPoke,\n        totalCount,\n        pageLimit,\n      } = {...pokemonApp}\n\n\n      useEffect(() => {\n        pokemonApp.getPoke()\n      }, [])\n\n      const getStatsPoke = (url) => {\n        pokemonApp.getStats(url)\n      }\n\n      const changePageSize = (newLimit) => {\n        pokemonApp.setPageLimit(newLimit)\n      }\n    const changeOffset = (newOffset) => {\n      pokemonApp.setOffset(newOffset)\n    }\n\n      return (\n        <div className=\"App\">\n\n          <LimitLoad changePageSize={changePageSize}/>\n          <div className=\"pokeWindow\">\n            {\n              pokemons &&\n              pokemons.map((pokemon, i) => (\n                <PokemonCard key={`${i}_${pokemon.url}`}\n                             name={pokemon.name}\n                             url={pokemon.url}\n                             getStatsPoke={getStatsPoke}\n                />))\n            }\n            <div className=\"selectedPoke\">\n              {\n                selectedPoke\n                  ? <SelectedPoke fullStats={selectedPoke}/>\n                  : 'Select poke'\n              }\n            </div>\n          </div>\n          <Pagination changeOffset={changeOffset}\n                      totalCount={totalCount}\n                      pageLimit={pageLimit}\n                      getNextPage={pokemonApp.getNextPage}\n                      getPreviousPage={pokemonApp.getPreviousPage}\n          />\n        </div>\n      );\n    }\n  ))\nexport default App;\n","import axios from 'axios'\r\n\r\nexport const api = {\r\n    getPokemons(offset, limit ) {\r\n        return axios\r\n            .get(`https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`)\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n    },\r\n    getPokemonStats(url) {\r\n        return axios.get(url).then((res) => {\r\n            return res.data\r\n        })\r\n    },\r\n    nextPage(url) {\r\n        return axios\r\n            .get(url)\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n    },\r\n    previousPage(url) {\r\n        return axios\r\n            .get(url)\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n    }\r\n}\r\n","import {api} from \"../api/api\";\r\n\r\nconst {makeAutoObservable} = require(\"mobx\");\r\n\r\nclass PokemonApp {\r\n\r\n  pokemons = []\r\n  selectedPoke = ''\r\n  nextPage = ''\r\n  previousPage = ''\r\n  totalCount = 0\r\n  pageLimit = 10\r\n  pageOffset = 0\r\n\r\n\r\n  constructor() {\r\n    makeAutoObservable(this, {}, {deep: true, autoBind: true})\r\n  }\r\n\r\n\r\n  setPoke = (payload) => {\r\n    this.pokemons = [...payload]\r\n  }\r\n  setSelectedPoke = (payload) => {\r\n    this.selectedPoke = payload\r\n  }\r\n  setNextPage = (payload) => {\r\n    this.nextPage = payload\r\n  }\r\n  setPreviousPage = (payload) => {\r\n    this.previousPage = payload\r\n  }\r\n  setPageLimit = (payload) => {\r\n    this.pageLimit = payload\r\n    this.getPoke(this.pageOffset, this.pageLimit)\r\n  }\r\n\r\n\r\n  setOffset = (payload) => {\r\n    this.pageOffset = payload\r\n    this.getPoke(this.pageOffset, this.pageLimit)\r\n  }\r\n\r\n\r\n  getPoke = async () => {\r\n    try {\r\n      let res = await api.getPokemons(this.pageOffset, this.pageLimit)\r\n      this.setPoke(res.results)\r\n      this.setNextPage(res.next)\r\n      this.setPreviousPage(res.previous)\r\n      this.totalCount = res.count\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  getNextPage = async () => {\r\n    try {\r\n      let res = await api.nextPage(this.nextPage)\r\n      this.setPoke(res.results)\r\n      this.setNextPage(res.next)\r\n      this.setPreviousPage(res.previous)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n  getPreviousPage = async () => {\r\n    try {\r\n      let res = await api.previousPage(this.previousPage)\r\n      this.setPoke(res.results)\r\n      this.setNextPage(res.next)\r\n      this.setPreviousPage(res.previous)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  getStats = async (url) => {\r\n    try {\r\n      let res = await api.getPokemonStats(url)\r\n      this.setSelectedPoke(res)\r\n      console.log(res)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default PokemonApp","import PokemonApp from \"./pokemonApp\";\r\n\r\n\r\nexport const stores = {\r\n    pokemonApp: new PokemonApp()\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"mobx-react\";\nimport './index.css';\nimport App from './App';\nimport {stores} from \"./store/index\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider {...stores}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}